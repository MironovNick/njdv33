{"version":3,"sources":["App.js","index.js"],"names":["Inputs","props","id","className","type","name","min","max","value","edit","onChange","changeEdit","textarea","checkbox","onClick","buildClick","Build","buildlist","item_key","i","push","rows","cols","App","formClick","setState","step","event","target","state","elems","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAGA,SAASA,EAAOC,GACf,OACC,sBAAKC,GAAG,gBAAR,UACC,qBAAKC,UAAU,gBAAf,SACC,uBAAMA,UAAU,aAAhB,UACC,sBAAKA,UAAU,sBAAf,UACC,sCACA,uBAAOC,KAAK,SAASC,KAAK,OAAOC,IAAI,IAAIC,IAAI,MAAMC,MAAOP,EAAMQ,KAAMC,SAAUT,EAAMU,gBAEvF,sBAAKR,UAAU,sBAAf,UACC,yCACA,uBAAOC,KAAK,SAASC,KAAK,WAAWC,IAAI,IAAIC,IAAI,MAAMC,MAAOP,EAAMW,SAAUF,SAAUT,EAAMU,gBAE/F,sBAAKR,UAAU,sBAAf,UACC,yCACA,uBAAOC,KAAK,SAASC,KAAK,WAAWC,IAAI,IAAIC,IAAI,MAAMC,MAAOP,EAAMY,SAAUH,SAAUT,EAAMU,qBAIjG,wBAAQT,GAAG,eAAeY,QAASb,EAAMc,WAAzC,sBAIH,SAASC,EAAMf,GAGd,IAFA,IAAIgB,EAAY,GACZC,EAAW,EACPC,EAAI,EAAGA,EAAIlB,EAAMQ,KAAMU,IAC9BF,EAAUG,KAAK,uBAAOhB,KAAK,OAAOC,KAAK,QAAca,MAEtD,IAAI,IAAIC,EAAI,EAAGA,EAAIlB,EAAMW,SAAUO,IAClCF,EAAUG,KAAK,0BAAUC,KAAK,KAAKC,KAAK,KAAKjB,KAAK,YAAkBa,MAErE,IAAI,IAAIC,EAAI,EAAGA,EAAIlB,EAAMY,SAAUM,IAClCF,EAAUG,KAAK,sBAAKjB,UAAU,kBAAf,UAAqD,uBAAOC,KAAK,WAAWC,KAAK,aAAa,gCAAQ,YAAYc,EAAE,OAA5ED,MAExD,OAAO,sBAAKhB,GAAG,aAAR,cAAsB,sBAAKC,UAAU,aAAf,cAA8Bc,EAA9B,OAAtB,O,IA2COM,E,kDAvCd,WAAYtB,GAAQ,IAAD,8BAClB,cAAMA,IAKPuB,UAAY,WACX,EAAKC,SAAS,CAACC,KAAM,KAPH,EAUnBX,WAAa,WACZ,EAAKU,SAAS,CAACC,KAAM,KAXH,EAcnBf,WAAa,SAACgB,GACb,EAAKF,SAAL,eAAgBE,EAAMC,OAAOvB,KAAOsB,EAAMC,OAAOpB,SAbjD,EAAKqB,MAAQ,CAAEH,KAAM,EAAGjB,KAAM,EAAGG,SAAU,EAAGC,SAAU,GAFtC,E,qDAmBlB,IAAIiB,EAUH,OARAA,EADsB,IAApBC,KAAKF,MAAMH,KACL,wBAAQxB,GAAG,cAAcY,QAASiB,KAAKP,UAAvC,kBACqB,IAApBO,KAAKF,MAAMH,KACZ,cAAC1B,EAAD,CAAQS,KAAMsB,KAAKF,MAAMpB,KAAMG,SAAUmB,KAAKF,MAAMjB,SAAUC,SAAUkB,KAAKF,MAAMhB,SAAUF,WAAYoB,KAAKpB,WAAYI,WAAYgB,KAAKhB,aAGnJ,cAACC,EAAD,CAAOP,KAAMsB,KAAKF,MAAMpB,KAAMG,SAAUmB,KAAKF,MAAMjB,SAAUC,SAAUkB,KAAKF,MAAMhB,WAInF,qBAAKV,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACA2B,U,GAjCcE,IAAMC,WCnCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4c68d166.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\n\nfunction Inputs(props) {\n\treturn (\n\t\t<div id=\"building_form\">\n\t\t\t<div className=\"building_form\">\n\t\t\t\t<form className=\"form_tools\">\n\t\t\t\t\t<div className=\"building_form_input\">\n\t\t\t\t\t\t<p>Input</p>\n\t\t\t\t\t\t<input type=\"number\" name=\"edit\" min=\"0\" max=\"100\" value={props.edit} onChange={props.changeEdit} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"building_form_input\">\n\t\t\t\t\t\t<p>Textarea</p>\n\t\t\t\t\t\t<input type=\"number\" name=\"textarea\" min=\"0\" max=\"100\" value={props.textarea} onChange={props.changeEdit} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"building_form_input\">\n\t\t\t\t\t\t<p>Checkbox</p>\n\t\t\t\t\t\t<input type=\"number\" name=\"checkbox\" min=\"0\" max=\"100\" value={props.checkbox} onChange={props.changeEdit} />\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<button id=\"build_button\" onClick={props.buildClick}>Build</button>\n\t\t</div>);\n}\n\nfunction Build(props) {\n\tlet buildlist = [];\n\tlet item_key = 1;\n\tfor(let i = 0; i < props.edit; i++) {\n\t\tbuildlist.push(<input type=\"text\" name=\"Edit\" key = {item_key++} />)\n\t}\n\tfor(let i = 0; i < props.textarea; i++) {\n\t\tbuildlist.push(<textarea rows=\"10\" cols=\"45\" name=\"Textarea\" key = {item_key++} />)\n\t}\n\tfor(let i = 0; i < props.checkbox; i++) {\n\t\tbuildlist.push(<div className=\"checkbox_string\" key = {item_key++} ><input type=\"checkbox\" name=\"Checkbox\" /><label>{\"Checkbox\"+(i+1)}</label></div>)\n\t}\n\treturn <div id=\"final_form\"> <div className=\"final_form\"> {buildlist} </div> </div>\n}\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { step: 0, edit: 1, textarea: 1, checkbox: 1  };\n\t\t\t\t\n\t}\n\t\n\tformClick = () => {\n\t\tthis.setState({step: 1});\n\t}\n\t\n\tbuildClick = () => {\n\t\tthis.setState({step: 2});\n\t}\n\t\n\tchangeEdit = (event) => {\n\t\tthis.setState({[event.target.name]: event.target.value});\n\t}\n\t\n\trender() {\n\t\tlet elems;\n\t\tif(this.state.step === 0) {\n\t\t\telems = <button id=\"form_button\" onClick={this.formClick} >FORM</button>;\n\t\t} else if(this.state.step === 1) {\n\t\t\telems = <Inputs edit={this.state.edit} textarea={this.state.textarea} checkbox={this.state.checkbox} changeEdit={this.changeEdit} buildClick={this.buildClick} />\n\t\t} else {\n\t\t\telems = \n\t\t\t<Build edit={this.state.edit} textarea={this.state.textarea} checkbox={this.state.checkbox} />;\n\t\t}\n\t\t\n\t  return (\n\t\t<div className=\"App\">\n\t\t  <header className=\"App-header\">\n\t\t\t{elems}\n\t\t  </header>\n\t\t</div>\n\t  );\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}